// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Portions of the database were generated by Gemini 2.5 Pro : https://aistudio.google.com/app/prompts?state=%7B%22ids%22:%5B%221mgXoPlJMVn7S2NmKWJnF6GqByUtEvEs5%22%5D,%22action%22:%22open%22,%22userId%22:%22108593051934579297280%22,%22resourceKeys%22:%7B%7D%7D&usp=sharing

/**
 * The lifecycle of a posting, as you defined.
 * 1. A customer makes a new posting -> WAITING_FOR_BIDS
 * 2. At least one bid is made -> HAS_ACTIVE_BIDS
 * 3. Customer selects a bidder -> MATCHED
 * 4. Both parties agree -> CONFIRMED
 * 5. Job is done -> COMPLETED
 * Other states: CANCELLED, FAILED.
 */
enum PostStatus {
  WAITING_FOR_BIDS
  HAS_ACTIVE_BIDS
  MATCHED
  CONFIRMED
  CANCELLED
  FAILED
  COMPLETED
}

enum MediaType {
  IMAGE
  VIDEO
}

enum BidStatus {
  ACTIVE // The bid is open for consideration
  ACCEPTED // The customer has chosen this bid
  DECLINED // The customer chose another bid
  WITHDRAWN // The partner cancelled their own bid
}

// To differentiate tag purposes
enum TagType {
  SKILL
  OCCUPATION
  CATEGORY
}

enum NotificationType {
  NEW_BID_ON_POST
  BID_ACCEPTED
  POSTING_CONFIRMED
  POSTING_COMPLETED
  NEW_REVIEW
  MATCHING_POST_FOUND // For notifying partners of new relevant jobs
}
